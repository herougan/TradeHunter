
Separate logic into the different util files

DataRetrievalUtil downloads data from many files into static. What it downloads is based on a text file.
DataTestingUtil tests based on data retrieved. Text File is used as reference (or just use every file in folder)

Bug fixes:

2o) Create ivar  TEST
2z) Delete test
2p) Delete optim

3) Rename dataset

4b) Delete test result

RESULT ANALYSIS - different types
CREATE IVAR - ivar

1) check all titles are good enough

1) Fix optimisation

5) Bring progress windows to the front
5b) Testing and optimisation: Progress bar embedded
5c) Graph embedded during optimisation
5d) result analysis shows all datasets tested

7) In optimisation, move 'name' to meta level (instead of within ivar_dict['ivar'])

8) Settle todos
8a) Delete ivar, delete dataset, create custom ivar
8b) Plot single test
8c) Create todos for Long Future
8d) Block optimisation
8e) Random optimisation

9) Consider 1) Small ranges, Discrete, Array and Continuous types
E.g. Small ranges are not processed in Block or Random runs, Discrete MUST move in steps,
arrays can only move along array's list and continuous allows for any value, step size being
the '1-step' value. (In random, MAX_STEP * STEP_SIZE = max step size if normalised and the
descent only goes in one coordinate direction, so it matters) (e.g. max_step = 1 means that
normalised over the whole hyperparameter sphere, the parameters can only descend by max 1 step_size.
Of course, if its only 1 but has N parameters, all the N parameters would move less than 1 step.
Min. 1 step. (moving much further than dist = 1)


Objective:

1) Fix testing

2) Finish Optimisation

3) Adjust FMACDRobot

4) Progress windows in front, QTUpdate(), share axes

Main Features:

1) Optimise robots against dataset(s) producing recommended initial variables (iVars)
- single type testing vs multi type

2) During sim plotting, only plot the latest data, do not clear and replot the xlim'd graph. Actually current way may be better,
as old data is cleared

3) One-time plot, simulate a test and do a one-time plot of all the data.

4) Main methods for non-GUI treatments. e.g. for interactability etc.

# Algorithms

New.

# Final

6) Run robot

7) Run robot controller (Manages several robots)

8) Shapesetdef contains data specific to certain chart profiles. One can test their robot against these chart profiles
to see which type of trends/shapes/market conditions it is better at trading in.

# Optimisation

1) Bayesian

2) Small-range args - do not need to optimise as much -

3) Parallel attributes: Detect attributes that are not affected much by other attributes

4) AI Optimisation



UI:

1) Switching between datasets resets the current datatable scroll value

2) Dataset suggested fill issues

Others:


10) Lag Signals



Others 2:



1) Box-optimise small ivar ranges
2) Ivar-choices - Optimise/Manual-set - Values (Init at default)
3) Re-download all button (beside update all) - deletes all df and redownloads them
4) Ticker mode. - may need internet connection - too much data. download swaths at a time (in mem only)
5) Martingale+Grid+Profit_Line