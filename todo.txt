
Separate logic into the different util files

DataRetrievalUtil downloads data from many files into static. What it downloads is based on a text file.
DataTestingUtil tests based on data retrieved. Text File is used as reference (or just use every file in folder)

Bug fixes:

1) Ivar-choices - Optimise/Manual-set - Values (Init at default)
2) Discrete sliders, if large number of possibilities -> discrete slider in steps only.
(Continuous ignores steps)
2a) TextEdit updates value if slider moved, Slider updates if textEdit editted (only on 'edit_complete')
wait 1s? On fail a.k.a out or range - go to range[0] or range[1]
2b) All elements put on rows instead of self.left, self.right. Rows use either slider-spacing or normal-spacing
label - combo/slider+edit/edit
2c) text->slider, slider->text event functions - not stack against each other
2d) Create Ivar function, does it work?

*3) Put stuff up on TradeHunter trello
3b) Start angular trello
3c) resume - then application

5) Bring progress windows to the front
5b) Testing and optimisation: Progress bar embedded
5c) Graph embedded during optimisation
5d) result analysis shows all datasets tested

6) IVar input should stay as ivar (eg. no more "self.min_base = ivar['min_base']['default']")
though it is more convenient to use self.min_base. check can just run __init__ again if it fails.
adjusting ivar values. what about moving values? the ivar doesnt move but the main value moves.
Only delete this (6) line after understanding this.

8d) Block optimisation
8e) Random optimisation
#==============DATA TESTER===========
9) Consider 1) Small ranges, Discrete, Array and Continuous types
E.g. Small ranges are not processed in Block or Random runs, Discrete MUST move in steps,
arrays can only move along array's list and continuous allows for any value, step size being
the '1-step' value. (In random, MAX_STEP * STEP_SIZE = max step size if normalised and the
descent only goes in one coordinate direction, so it matters) (e.g. max_step = 1 means that
normalised over the whole hyperparameter sphere, the parameters can only descend by max 1 step_size.
Of course, if its only 1 but has N parameters, all the N parameters would move less than 1 step.
Min. 1 step. (moving much further than dist = 1)
9b) detect parallel attributes
#================= SIM ================
10) Algo plotter in sim plotter
10b) share axes for convenience
10c(HARD)) Sim plotter redraws only relevant parts/draws relevant parts

11) full 'simulated' plot - candlesticks -> line, + profit line, buy/sell profit/loss lines

12) Algo Analysis page
12b) Move sliders around -> sim in real time, "preview_stat" (How many candlesticks to show)
12c) set_args, get_args function in all algos and robots
12d) create ivar for algo
New.
12e) *Default is always default. findText for default, else 0.
12f) ' special characters ' not allowed, aka: %$^&*()#@!\/<>,.'";:`~[]{}-_=+?
12g) parallel simulation
12f) On the move stats (Some) for simulator -> 12**f) rename to simulator. robot updated from that point, visuals will
lag update only in future. (with regards to changing ivar on the fly, whether in SIMPLE PLOTTER (plotted all at once)
or SIMULATOR PLOT (plotted on the go) ----|
12*f) Stats that update immediately for simple plotter. visuals also update whole of data
---|> 12h) when it is done, it resimlates. (Requires parallel computerization so that buttons can be pressed while
graph is being updated -> cancel this if too much)

13) Multi mode/Run robot controller (Manages several robots)

14) Ticker mode. - may need internet connection - too much data. download swaths at a time (in mem only)

15) Shapesetdef contains data specific to certain chart profiles. One can test their robot against these chart profiles
to see which type of trends/shapes/market conditions it is better at trading in.

16a) Robot idea: twin sma, simple
16b) Robot idea: Martingale+Grid+Profit_Line

17) Scroll page if create ivar has too many ivar lines